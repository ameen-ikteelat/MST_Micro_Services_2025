public class SameTree {
    /**
     * Checks if two binary trees are the same.
     * Two trees are considered the same if they are structurally identical
     * and have the same node values.
     *
     * @param p the root of the first tree
     * @param q the root of the second tree
     * @return true if the trees are the same, false otherwise
     */
    public boolean isSameTree(TreeNode p, TreeNode q) {
        if (p == null && q == null) {
            return true;
        }
        if (p == null || q == null) {
            return false;
        }
        if (p.val != q.val) {
            return false;
        }

        return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);
    }

    public static void main(String[] args) {
        TreeNode p = new TreeNode(1, new TreeNode(2), new TreeNode(3));
        TreeNode q = new TreeNode(1, new TreeNode(2), new TreeNode(3));

        SameTree checker = new SameTree();
        System.out.println("Are the two trees the same? " + checker.isSameTree(p, q));
    }
}